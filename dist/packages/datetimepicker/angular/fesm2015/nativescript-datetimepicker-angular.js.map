{"version":3,"file":"nativescript-datetimepicker-angular.js","sources":["../../nativescript-datetimepicker.directives.ts","../../nativescript-datetimepicker.accessors.ts","../../index.ts","../../nativescript-datetimepicker-angular.ts"],"sourcesContent":["import { Directive } from \"@angular/core\";\n\n@Directive({\n    selector: \"DatePickerField\"\n})\nexport class DatePickerFieldDirective { }\n\n@Directive({\n    selector: \"TimePickerField\"\n})\nexport class TimePickerFieldDirective { }\n\n@Directive({\n    selector: \"DateTimePickerFields\"\n})\nexport class DateTimePickerFieldsDirective { }","import { Directive, ElementRef, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { BaseValueAccessor } from \"@nativescript/angular\";\nimport { DatePickerField, TimePickerField, DateTimePickerFields } from \"@nativescript/datetimepicker\";\n\nconst DATE_PICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatePickerValueAccessor),\n    multi: true,\n};\n\nconst TIME_PICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimePickerValueAccessor),\n    multi: true,\n};\n\nconst DATE_TIME_PICKERS_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DateTimePickersValueAccessor),\n    multi: true,\n};\n\n/**\n * The accessor for setting a date and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <DatePickerField [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n    selector: \"DatePickerField[ngModel],DatePickerField[formControlName],DatePickerField[formControl],\" +\n        \"datepickerfield[ngModel],datepickerfield[formControlName],datepickerfield[formControl],\" +\n        \"datePickerField[ngModel],datePickerField[formControlName],datePickerField[formControl],\" +\n        \"date-picker-field[ngModel],date-picker-field[formControlName],date-picker-field[formControl]\",\n    providers: [DATE_PICKER_VALUE_ACCESSOR],\n    host: {\n        \"(dateChange)\": \"handleDateChange($event)\",\n        \"(datePickerOpened)\": \"handleDatePickerOpened($event)\",\n        \"(datePickerClosed)\": \"handleDatePickerClosed($event)\"\n    },\n})\nexport class DatePickerValueAccessor extends BaseValueAccessor<DatePickerField> {\n    private _hasBeenOpened = false;\n    constructor(elementRef: ElementRef) {\n        super(elementRef.nativeElement);\n    }\n\n    writeValue(value: any): void {\n        const normalized = super.normalizeValue(value);\n        this.view.date = normalized;\n    }\n\n    handleDateChange(args: any) {\n        if (this._hasBeenOpened) {\n            this.onChange(args.value);\n        }\n    }\n\n    handleDatePickerOpened(args: any) {\n        this._hasBeenOpened = true;\n    }\n\n    handleDatePickerClosed(args: any) {\n        this.onTouched();\n    }\n}\n\n/**\n * The accessor for setting a time and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <TimePickerField [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n    selector: \"TimePickerField[ngModel],TimePickerField[formControlName],TimePickerField[formControl],\" +\n        \"timepickerfield[ngModel],timepickerfield[formControlName],timepickerfield[formControl],\" +\n        \"timePickerField[ngModel],timePickerField[formControlName],timePickerField[formControl],\" +\n        \"time-picker-field[ngModel],time-picker-field[formControlName],time-picker-field[formControl]\",\n    providers: [TIME_PICKER_VALUE_ACCESSOR],\n    host: {\n        \"(timeChange)\": \"handleTimeChange($event)\",\n        \"(timePickerOpened)\": \"handleTimePickerOpened($event)\",\n        \"(timePickerClosed)\": \"handleTimePickerClosed($event)\"\n    },\n})\nexport class TimePickerValueAccessor extends BaseValueAccessor<TimePickerField> {\n    private _hasBeenOpened = false;\n    constructor(elementRef: ElementRef) {\n        super(elementRef.nativeElement);\n    }\n\n    writeValue(value: any): void {\n        const normalized = super.normalizeValue(value);\n        this.view.time = normalized;\n    }\n\n    handleTimeChange(args: any) {\n        if (this._hasBeenOpened) {\n            this.onChange(args.value);\n        }\n    }\n\n    handleTimePickerOpened(args: any) {\n        this._hasBeenOpened = true;\n    }\n\n    handleTimePickerClosed(args: any) {\n        this.onTouched();\n    }\n}\n\n/**\n * The accessor for setting a date and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <DateTimePickerFields [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n    selector: \"DateTimePickerFields[ngModel],DateTimePickerFields[formControlName],DateTimePickerFields[formControl],\" +\n        \"datetimepickerfields[ngModel],datetimepickerfields[formControlName],datetimepickerfields[formControl],\" +\n        \"dateTimePickerFields[ngModel],dateTimePickerFields[formControlName],dateTimePickerFields[formControl],\" +\n        \"date-time-picker-fields[ngModel],date-time-picker-fields[formControlName],date-time-picker-fields[formControl]\",\n    providers: [DATE_TIME_PICKERS_VALUE_ACCESSOR],\n    host: {\n        \"(dateChange)\": \"handleDateChange($event)\",\n        \"(datePickerOpened)\": \"handlePickerOpened($event)\",\n        \"(datePickerClosed)\": \"handlePickerClosed($event)\",\n        \"(timePickerOpened)\": \"handlePickerOpened($event)\",\n        \"(timePickerClosed)\": \"handlePickerClosed($event)\"\n    },\n})\nexport class DateTimePickersValueAccessor extends BaseValueAccessor<DateTimePickerFields> {\n    private _hasBeenOpened = false;\n    constructor(elementRef: ElementRef) {\n        super(elementRef.nativeElement);\n    }\n\n    writeValue(value: any): void {\n        const normalized = super.normalizeValue(value);\n        this.view.date = normalized;\n    }\n\n    handleDateChange(args: any) {\n        if (this._hasBeenOpened) {\n            this.onChange(args.value);\n        }\n    }\n\n    handlePickerOpened(args: any) {\n        this._hasBeenOpened = true;\n    }\n\n    handlePickerClosed(args: any) {\n        this.onTouched();\n    }\n}","import { NgModule } from \"@angular/core\";\nimport { registerElement } from \"@nativescript/angular\";\nimport { DatePickerField, TimePickerField, DateTimePickerFields } from \"@nativescript/datetimepicker\";\nimport {\n  DatePickerFieldDirective,\n  TimePickerFieldDirective,\n  DateTimePickerFieldsDirective,\n} from \"./nativescript-datetimepicker.directives\";\nimport {\n  DatePickerValueAccessor,\n  TimePickerValueAccessor,\n  DateTimePickersValueAccessor,\n} from \"./nativescript-datetimepicker.accessors\";\n\nexport {\n  DatePickerFieldDirective,\n  TimePickerFieldDirective,\n  DateTimePickerFieldsDirective,\n} from \"./nativescript-datetimepicker.directives\";\nexport {\n  DatePickerValueAccessor,\n  TimePickerValueAccessor,\n  DateTimePickersValueAccessor,\n} from \"./nativescript-datetimepicker.accessors\";\n\n@NgModule({\n  declarations: [\n    DatePickerFieldDirective,\n    TimePickerFieldDirective,\n    DateTimePickerFieldsDirective,\n    DatePickerValueAccessor,\n    TimePickerValueAccessor,\n    DateTimePickersValueAccessor,\n  ],\n  exports: [\n    DatePickerFieldDirective,\n    TimePickerFieldDirective,\n    DateTimePickerFieldsDirective,\n    DatePickerValueAccessor,\n    TimePickerValueAccessor,\n    DateTimePickersValueAccessor,\n  ],\n})\nexport class NativeScriptDateTimePickerModule {}\n\nregisterElement(\"DatePickerField\", () => DatePickerField);\nregisterElement(\"TimePickerField\", () => TimePickerField);\nregisterElement(\"DateTimePickerFields\", () => DateTimePickerFields);\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}